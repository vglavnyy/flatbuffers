native_include "monster_extra_native.h";

namespace MyGame;

// A point in the polar complex plain.
// The behavior is undefined if magnitude is negative or NaN, or if arg is infinite.
// Store as single precision, use double precision for calculation.
struct PolarPoint (native_type:"std::complex<double>") {
  mag: float;
  arg: float; // radians
}

// Another native_type tp check overloading.
struct Transformation (native_type:"std::pair<double, double>") {
  scale: float;
  angle: float; // radians around (0,0)
}

// Not all programming languages support this extra table.
table MonsterExtra {
  // Float-point values with NaN and Inf defaults.
  d0:double = nan;
  d1:double = -nan; // parser must ignore sign of NaN
  d2:double = +inf;
  d3:double = -inf;
  f0:float = -nan; // parser must ignore sign of NaN
  f1:float = +nan;
  f2:float = +inf;
  f3:float = -inf;
  dvec : [double];
  fvec : [float];
  polar_contour : [PolarPoint];
  transform_chain : [Transformation];
}

root_type MonsterExtra;

file_identifier "MONE";
file_extension "mon";
